/*
* generated by Xtext
*/
package co.edu.uniandes.mono.gesco.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import co.edu.uniandes.mono.gesco.services.DSLGrammarAccess;

public class DSLParser extends AbstractContentAssistParser {
	
	@Inject
	private DSLGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected co.edu.uniandes.mono.gesco.ui.contentassist.antlr.internal.InternalDSLParser createParser() {
		co.edu.uniandes.mono.gesco.ui.contentassist.antlr.internal.InternalDSLParser result = new co.edu.uniandes.mono.gesco.ui.contentassist.antlr.internal.InternalDSLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getArquitecturaAccess().getAlternatives(), "rule__Arquitectura__Alternatives");
					put(grammarAccess.getConfiguracionAccess().getGroup(), "rule__Configuracion__Group__0");
					put(grammarAccess.getConfiguracionAccess().getGroup_3(), "rule__Configuracion__Group_3__0");
					put(grammarAccess.getConfiguracionAccess().getGroup_3_1(), "rule__Configuracion__Group_3_1__0");
					put(grammarAccess.getSistemaOperativoAccess().getGroup(), "rule__SistemaOperativo__Group__0");
					put(grammarAccess.getSistemaOperativoAccess().getGroup_9(), "rule__SistemaOperativo__Group_9__0");
					put(grammarAccess.getFuentesAccess().getGroup(), "rule__Fuentes__Group__0");
					put(grammarAccess.getSoftwareAccess().getGroup(), "rule__Software__Group__0");
					put(grammarAccess.getSoftwareAccess().getGroup_4(), "rule__Software__Group_4__0");
					put(grammarAccess.getSoftwareAccess().getGroup_5(), "rule__Software__Group_5__0");
					put(grammarAccess.getSoftwareAccess().getGroup_9(), "rule__Software__Group_9__0");
					put(grammarAccess.getSoftwareAccess().getGroup_10(), "rule__Software__Group_10__0");
					put(grammarAccess.getSoftwareAccess().getGroup_10_4(), "rule__Software__Group_10_4__0");
					put(grammarAccess.getSoftwareAccess().getGroup_11(), "rule__Software__Group_11__0");
					put(grammarAccess.getSoftwareAccess().getGroup_11_4(), "rule__Software__Group_11_4__0");
					put(grammarAccess.getConfiguracionAccess().getSistemaOperativoAssignment_3_0(), "rule__Configuracion__SistemaOperativoAssignment_3_0");
					put(grammarAccess.getConfiguracionAccess().getSistemaOperativoAssignment_3_1_1(), "rule__Configuracion__SistemaOperativoAssignment_3_1_1");
					put(grammarAccess.getSistemaOperativoAccess().getNameAssignment_1(), "rule__SistemaOperativo__NameAssignment_1");
					put(grammarAccess.getSistemaOperativoAccess().getVersionAssignment_4(), "rule__SistemaOperativo__VersionAssignment_4");
					put(grammarAccess.getSistemaOperativoAccess().getDescripcionAssignment_6(), "rule__SistemaOperativo__DescripcionAssignment_6");
					put(grammarAccess.getSistemaOperativoAccess().getArquitecturaAssignment_8(), "rule__SistemaOperativo__ArquitecturaAssignment_8");
					put(grammarAccess.getSistemaOperativoAccess().getFuentesAssignment_9_2(), "rule__SistemaOperativo__FuentesAssignment_9_2");
					put(grammarAccess.getSistemaOperativoAccess().getFuentesAssignment_9_3(), "rule__SistemaOperativo__FuentesAssignment_9_3");
					put(grammarAccess.getSistemaOperativoAccess().getRequerimientosAssignment_12(), "rule__SistemaOperativo__RequerimientosAssignment_12");
					put(grammarAccess.getSistemaOperativoAccess().getRequerimientosAssignment_13(), "rule__SistemaOperativo__RequerimientosAssignment_13");
					put(grammarAccess.getFuentesAccess().getNameAssignment_3(), "rule__Fuentes__NameAssignment_3");
					put(grammarAccess.getFuentesAccess().getAutorAssignment_6(), "rule__Fuentes__AutorAssignment_6");
					put(grammarAccess.getFuentesAccess().getFuenteAssignment_9(), "rule__Fuentes__FuenteAssignment_9");
					put(grammarAccess.getFuentesAccess().getTipoFuenteAssignment_12(), "rule__Fuentes__TipoFuenteAssignment_12");
					put(grammarAccess.getSoftwareAccess().getNameAssignment_3(), "rule__Software__NameAssignment_3");
					put(grammarAccess.getSoftwareAccess().getVersionAssignment_4_2(), "rule__Software__VersionAssignment_4_2");
					put(grammarAccess.getSoftwareAccess().getDescripcionAssignment_5_2(), "rule__Software__DescripcionAssignment_5_2");
					put(grammarAccess.getSoftwareAccess().getArquitecturaAssignment_8(), "rule__Software__ArquitecturaAssignment_8");
					put(grammarAccess.getSoftwareAccess().getRutaDestinoAssignment_9_2(), "rule__Software__RutaDestinoAssignment_9_2");
					put(grammarAccess.getSoftwareAccess().getDependenciaAssignment_10_3(), "rule__Software__DependenciaAssignment_10_3");
					put(grammarAccess.getSoftwareAccess().getDependenciaAssignment_10_4_1(), "rule__Software__DependenciaAssignment_10_4_1");
					put(grammarAccess.getSoftwareAccess().getOrigenAssignment_11_3(), "rule__Software__OrigenAssignment_11_3");
					put(grammarAccess.getSoftwareAccess().getOrigenAssignment_11_4_1(), "rule__Software__OrigenAssignment_11_4_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			co.edu.uniandes.mono.gesco.ui.contentassist.antlr.internal.InternalDSLParser typedParser = (co.edu.uniandes.mono.gesco.ui.contentassist.antlr.internal.InternalDSLParser) parser;
			typedParser.entryRuleConfiguracion();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public DSLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(DSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
