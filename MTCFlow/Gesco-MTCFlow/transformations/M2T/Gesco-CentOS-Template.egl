[%
var script:Script = Script.allInstances().get(0);
%]#!/bin/bash
# Proyecto Gesco
# Descripcion: [%=script.descripcion%]

cd ~/
mkdir temp
cd temp

#
# Repositorios
#
[%=generarRepos(script.repositorios)%]


#
# Aplicaciones
#
[%=generarApps(script.aplicaciones)%]

#
#Configuración e instalación de Mono
#

cd /opt
wget -t 0 -c http://ftp.ruby-lang.org/pub/ruby/ruby-1.9.3-p547.tar.gz
tar -xzvf ruby-1.9.3-p547.tar.gz
cd ruby-1.9.3-p547/
./configure
make
sudo make install
ruby -v

gem install rails --version 3.2.8 #Descripcion: Framework para aplicaciones web en Ruby. Ruby on Rails. Version: 3.2.8. Arquitectura: x64
gem install bundler #Descripcion: Gestor de dependencia en Ruby on Rails. Arquitectura: x64

cd ~/
mkdir cms
cd cms
wget -t 0 -c http://157.253.238.183/temp/cms.sql
chmod 777 cms.sql
mysql -u root -p < cms.sql
wget -t 0 -c http://157.253.238.183/temp/mono.tar.gz
chmod 777 mono.tar.gz
tar -xzvf mono.tar.gz
chmod 777 -R mono
bundle install

cd ~/
rm -rf temp

echo "=================================="
echo "Proceso de instalación ha finalizado"
echo "=================================="
echo "Por favor, ingrese a directorio 'cms', luego a la carpeta 'mono' y finalmente a la carpeta 'config'"
echo "Y en modifique el archivo 'database.yml' en los apartados 'password' con la contraseña de su "
echo "gestor base de datos MySQL. Ejemplo: 'password: 12345678'."
echo "=================================="
echo "Finalmente regrese a la carpeta mono, y ejecute el comando 'rails server'"
echo "Espere un momento mientras carga, y finalmente desde un explorador de internet"
echo "Ingrese a la direccion: 'localhost:3000'"
echo "El usuario por defecto es: admin@david.com"
echo "Y la contraseña es: 12345678"
echo "====== Gracias por usar Gesco ======"

[%
// ===== Operaciones =====
operation generarRepos(repositorios:Set): String{

	var lineas:String;	
	for(repo in repositorios){
		switch(repo.gestor){
			case "ppa" : lineas = lineas + 'add-apt-repository -y '+repo.aplicacion;
			case "apt-source" : lineas = lineas + "echo "+repo.aplicacion+" >> /etc/apt/source.list";
			case "apt-key" : lineas = lineas + 'apt-ket add '+repo.aplicacion;
			case "wget" : lineas = lineas + 'wget -t 0 -c '+repo.aplicacion;
			case "curl" : lineas = lineas + 'curl -L '+repo.aplicacion + '| bash -s stable';
			default : lineas = lineas + '# add-apt-repository -y '+repo.aplicacion; 
		}
		lineas = lineas +" #"+repo.descripcion;
		lineas = lineas + "\n";
	}	
	return lineas;
}

operation generarApps(apps:Set): String{

	var lineas:String;	
	for(app in apps){
		if(app.gestor <> "Default"){
			
			if(app.gestor == "ppa"){
				lineas = lineas + 'apt-get install -y '+app.aplicacion;
		    }
		   else{
		   		lineas = lineas + '#Error. No es posible procesar esta dependencia '+app.aplicacion;
		   }
		}
		else{
			lineas = lineas + 'apt-get install -y '+app.aplicacion;
		}	
		lineas = lineas +" #"+app.descripcion;
		lineas = lineas + "\n";
	}	
	return lineas;
}

%]